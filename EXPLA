این کد دو تابع به نام‌های **ldivE** و **ldivF** را تعریف می‌کند که برای انجام عملیات تقسیم با باقی‌مانده (مانند تابع `ldiv` در زبان C) طراحی شده‌اند. هر تابع دو عدد ورودی می‌گیرد و سپس خارج قسمت (`quotient`) و باقی‌مانده (`remainder`) را محاسبه کرده و به صورت یک تاپل (جفت مرتب) برمی‌گرداند. در ادامه، کد و عملکرد آن به زبان فارسی توضیح داده شده است:

---

### تابع **ldivE**:
این تابع خارج قسمت و باقی‌مانده را به شکلی محاسبه می‌کند که باقی‌مانده همیشه **غیرمنفی** باشد.

#### پارامترها:
- **numer**: عددی که تقسیم می‌شود (صورت).
- **denom**: عددی که عدد اول بر آن تقسیم می‌شود (مخرج).

#### مراحل کار:
1. **محاسبه خارج قسمت (Quotient)**:
   - با استفاده از تابع `math.floor`، خارج قسمت تقسیم `numer / denom` محاسبه می‌شود.
   ```pinescript
   q = math.floor(numer / denom)
   ```

2. **محاسبه باقی‌مانده (Remainder)**:
   - باقی‌مانده با استفاده از عملگر `%` محاسبه می‌شود.
   ```pinescript
   r = numer % denom
   ```

3. **تصحیح در صورتی که باقی‌مانده منفی باشد**:
   - اگر باقی‌مانده منفی باشد، این مقدار تصحیح می‌شود تا **باقی‌مانده غیرمنفی** شود:
     - اگر مخرج مثبت باشد (`denom > 0`):
       ```pinescript
       q := q - 1 // خارج قسمت کاهش می‌یابد
       r := r + denom // باقی‌مانده افزایش می‌یابد
       ```
     - اگر مخرج منفی باشد (`denom < 0`):
       ```pinescript
       q := q + 1 // خارج قسمت افزایش می‌یابد
       r := r - denom // باقی‌مانده افزایش می‌یابد
       ```

4. **برگرداندن نتیجه**:
   - خارج قسمت و باقی‌مانده به صورت یک تاپل بازگردانده می‌شوند.
   ```pinescript
   [q, r]
   ```

---

### تابع **ldivF**:
این تابع خارج قسمت و باقی‌مانده را به شکلی محاسبه می‌کند که شرط خاصی برای باقی‌مانده اعمال شود. عملکرد آن مشابه **ldivE** است اما با منطق متفاوت.

#### پارامترها:
- **numer**: عددی که تقسیم می‌شود (صورت).
- **denom**: عددی که عدد اول بر آن تقسیم می‌شود (مخرج).

#### مراحل کار:
1. **محاسبه خارج قسمت (Quotient)**:
   - خارج قسمت به صورت ساده با تقسیم `numer / denom` محاسبه می‌شود.
   ```pinescript
   q = numer / denom
   ```

2. **محاسبه باقی‌مانده (Remainder)**:
   - باقی‌مانده با استفاده از عملگر `%` محاسبه می‌شود.
   ```pinescript
   r = numer % denom
   ```

3. **تصحیح در موارد خاص**:
   - اگر باقی‌مانده مثبت باشد و مخرج منفی باشد **یا** اگر باقی‌مانده منفی باشد و مخرج مثبت باشد:
     ```pinescript
     q := q - 1 // خارج قسمت کاهش می‌یابد
     r := r + denom // باقی‌مانده افزایش می‌یابد
     ```

4. **برگرداندن نتیجه**:
   - خارج قسمت و باقی‌مانده به صورت یک تاپل بازگردانده می‌شوند.
   ```pinescript
   [q, r]
   ```

---

### استفاده از توابع:
در پایان کد، توابع با مقادیر `numerE` و `denomE` (برای `ldivE`) و `numerF` و `denomF` (برای `ldivF`) فراخوانی می‌شوند و نتایج در متغیرهای `quotE`, `remE`, `quotF`, و `remF` ذخیره می‌شوند.

```pinescript
[quotE, remE] = ldivE(numerE, denomE)
[quotF, remF] = ldivF(numerF, denomF)
```

---

### تفاوت بین **ldivE** و **ldivF**:
- **ldivE**: تضمین می‌کند که باقی‌مانده همیشه غیرمنفی باشد.
- **ldivF**: شرایط خاصی را برای باقی‌مانده اعمال می‌کند، به خصوص در مواردی که مخرج منفی است.


